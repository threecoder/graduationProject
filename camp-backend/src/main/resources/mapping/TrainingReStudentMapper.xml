<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lutayy.campbackend.dao.TrainingReStudentMapper">
  <resultMap id="BaseResultMap" type="com.lutayy.campbackend.pojo.TrainingReStudent">
    <id column="re_id" jdbcType="INTEGER" property="reId" />
    <result column="apply_id" jdbcType="VARCHAR" property="applyId" />
    <result column="training_id" jdbcType="INTEGER" property="trainingId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="is_done" jdbcType="BIT" property="isDone" />
    <result column="is_invalid" jdbcType="BIT" property="isInvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    re_id, apply_id, training_id, student_id, begin_time, finish_time, is_done, is_invalid
  </sql>
  <select id="selectByExample" parameterType="com.lutayy.campbackend.pojo.TrainingReStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from training_re_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset},${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from training_re_student
    where re_id = #{reId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from training_re_student
    where re_id = #{reId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lutayy.campbackend.pojo.TrainingReStudentExample">
    delete from training_re_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lutayy.campbackend.pojo.TrainingReStudent">
    <selectKey keyProperty="reId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into training_re_student (apply_id, training_id, student_id, 
      begin_time, finish_time, is_done, 
      is_invalid)
    values (#{applyId,jdbcType=VARCHAR}, #{trainingId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{isDone,jdbcType=BIT}, 
      #{isInvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.lutayy.campbackend.pojo.TrainingReStudent">
    <selectKey keyProperty="reId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into training_re_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applyId != null">
        apply_id,
      </if>
      <if test="trainingId != null">
        training_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="isDone != null">
        is_done,
      </if>
      <if test="isInvalid != null">
        is_invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applyId != null">
        #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="trainingId != null">
        #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDone != null">
        #{isDone,jdbcType=BIT},
      </if>
      <if test="isInvalid != null">
        #{isInvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lutayy.campbackend.pojo.TrainingReStudentExample" resultType="java.lang.Long">
    select count(*) from training_re_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update training_re_student
    <set>
      <if test="record.reId != null">
        re_id = #{record.reId,jdbcType=INTEGER},
      </if>
      <if test="record.applyId != null">
        apply_id = #{record.applyId,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingId != null">
        training_id = #{record.trainingId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDone != null">
        is_done = #{record.isDone,jdbcType=BIT},
      </if>
      <if test="record.isInvalid != null">
        is_invalid = #{record.isInvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update training_re_student
    set re_id = #{record.reId,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=VARCHAR},
      training_id = #{record.trainingId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      is_done = #{record.isDone,jdbcType=BIT},
      is_invalid = #{record.isInvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lutayy.campbackend.pojo.TrainingReStudent">
    update training_re_student
    <set>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="trainingId != null">
        training_id = #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDone != null">
        is_done = #{isDone,jdbcType=BIT},
      </if>
      <if test="isInvalid != null">
        is_invalid = #{isInvalid,jdbcType=BIT},
      </if>
    </set>
    where re_id = #{reId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lutayy.campbackend.pojo.TrainingReStudent">
    update training_re_student
    set apply_id = #{applyId,jdbcType=VARCHAR},
      training_id = #{trainingId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      is_done = #{isDone,jdbcType=BIT},
      is_invalid = #{isInvalid,jdbcType=BIT}
    where re_id = #{reId,jdbcType=INTEGER}
  </update>
</mapper>