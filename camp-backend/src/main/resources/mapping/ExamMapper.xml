<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lutayy.campbackend.dao.ExamMapper">
  <resultMap id="BaseResultMap" type="com.lutayy.campbackend.pojo.Exam">
    <id column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="training_id" jdbcType="INTEGER" property="trainingId" />
    <result column="exam_num" jdbcType="SMALLINT" property="examNum" />
    <result column="exam_pass" jdbcType="SMALLINT" property="examPass" />
    <result column="exam_length_min" jdbcType="TINYINT" property="examLengthMin" />
    <result column="exam_start_time" jdbcType="TIMESTAMP" property="examStartTime" />
    <result column="exam_end_time" jdbcType="TIMESTAMP" property="examEndTime" />
    <result column="is_posted" jdbcType="BIT" property="isPosted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exam_id, exam_name, training_id, exam_num, exam_pass, exam_length_min, exam_start_time, 
    exam_end_time, is_posted
  </sql>
  <select id="selectByExample" parameterType="com.lutayy.campbackend.pojo.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where exam_id = #{examId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where exam_id = #{examId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lutayy.campbackend.pojo.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lutayy.campbackend.pojo.Exam">
    <selectKey keyProperty="examId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam (exam_name, training_id, exam_num, 
      exam_pass, exam_length_min, exam_start_time, 
      exam_end_time, is_posted)
    values (#{examName,jdbcType=VARCHAR}, #{trainingId,jdbcType=INTEGER}, #{examNum,jdbcType=SMALLINT}, 
      #{examPass,jdbcType=SMALLINT}, #{examLengthMin,jdbcType=TINYINT}, #{examStartTime,jdbcType=TIMESTAMP}, 
      #{examEndTime,jdbcType=TIMESTAMP}, #{isPosted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.lutayy.campbackend.pojo.Exam">
    <selectKey keyProperty="examId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examName != null">
        exam_name,
      </if>
      <if test="trainingId != null">
        training_id,
      </if>
      <if test="examNum != null">
        exam_num,
      </if>
      <if test="examPass != null">
        exam_pass,
      </if>
      <if test="examLengthMin != null">
        exam_length_min,
      </if>
      <if test="examStartTime != null">
        exam_start_time,
      </if>
      <if test="examEndTime != null">
        exam_end_time,
      </if>
      <if test="isPosted != null">
        is_posted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examName != null">
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="trainingId != null">
        #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="examNum != null">
        #{examNum,jdbcType=SMALLINT},
      </if>
      <if test="examPass != null">
        #{examPass,jdbcType=SMALLINT},
      </if>
      <if test="examLengthMin != null">
        #{examLengthMin,jdbcType=TINYINT},
      </if>
      <if test="examStartTime != null">
        #{examStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examEndTime != null">
        #{examEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPosted != null">
        #{isPosted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lutayy.campbackend.pojo.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.examName != null">
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingId != null">
        training_id = #{record.trainingId,jdbcType=INTEGER},
      </if>
      <if test="record.examNum != null">
        exam_num = #{record.examNum,jdbcType=SMALLINT},
      </if>
      <if test="record.examPass != null">
        exam_pass = #{record.examPass,jdbcType=SMALLINT},
      </if>
      <if test="record.examLengthMin != null">
        exam_length_min = #{record.examLengthMin,jdbcType=TINYINT},
      </if>
      <if test="record.examStartTime != null">
        exam_start_time = #{record.examStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examEndTime != null">
        exam_end_time = #{record.examEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPosted != null">
        is_posted = #{record.isPosted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set exam_id = #{record.examId,jdbcType=INTEGER},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      training_id = #{record.trainingId,jdbcType=INTEGER},
      exam_num = #{record.examNum,jdbcType=SMALLINT},
      exam_pass = #{record.examPass,jdbcType=SMALLINT},
      exam_length_min = #{record.examLengthMin,jdbcType=TINYINT},
      exam_start_time = #{record.examStartTime,jdbcType=TIMESTAMP},
      exam_end_time = #{record.examEndTime,jdbcType=TIMESTAMP},
      is_posted = #{record.isPosted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lutayy.campbackend.pojo.Exam">
    update exam
    <set>
      <if test="examName != null">
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="trainingId != null">
        training_id = #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="examNum != null">
        exam_num = #{examNum,jdbcType=SMALLINT},
      </if>
      <if test="examPass != null">
        exam_pass = #{examPass,jdbcType=SMALLINT},
      </if>
      <if test="examLengthMin != null">
        exam_length_min = #{examLengthMin,jdbcType=TINYINT},
      </if>
      <if test="examStartTime != null">
        exam_start_time = #{examStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examEndTime != null">
        exam_end_time = #{examEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPosted != null">
        is_posted = #{isPosted,jdbcType=BIT},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lutayy.campbackend.pojo.Exam">
    update exam
    set exam_name = #{examName,jdbcType=VARCHAR},
      training_id = #{trainingId,jdbcType=INTEGER},
      exam_num = #{examNum,jdbcType=SMALLINT},
      exam_pass = #{examPass,jdbcType=SMALLINT},
      exam_length_min = #{examLengthMin,jdbcType=TINYINT},
      exam_start_time = #{examStartTime,jdbcType=TIMESTAMP},
      exam_end_time = #{examEndTime,jdbcType=TIMESTAMP},
      is_posted = #{isPosted,jdbcType=BIT}
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
</mapper>