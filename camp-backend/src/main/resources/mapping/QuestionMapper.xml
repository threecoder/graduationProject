<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lutayy.campbackend.dao.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.lutayy.campbackend.pojo.Question">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="training_id" jdbcType="INTEGER" property="trainingId" />
    <result column="question_state" jdbcType="VARCHAR" property="questionState" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="choice_a" jdbcType="VARCHAR" property="choiceA" />
    <result column="choice_b" jdbcType="VARCHAR" property="choiceB" />
    <result column="choice_c" jdbcType="VARCHAR" property="choiceC" />
    <result column="choice_d" jdbcType="VARCHAR" property="choiceD" />
    <result column="right_choice_one" jdbcType="TINYINT" property="rightChoiceOne" />
    <result column="right_choice_two" jdbcType="TINYINT" property="rightChoiceTwo" />
    <result column="right_choice_three" jdbcType="TINYINT" property="rightChoiceThree" />
    <result column="right_choice_four" jdbcType="TINYINT" property="rightChoiceFour" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, training_id, question_state, type, choice_a, choice_b, choice_c, choice_d, 
    right_choice_one, right_choice_two, right_choice_three, right_choice_four
  </sql>
  <select id="selectByExample" parameterType="com.lutayy.campbackend.pojo.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lutayy.campbackend.pojo.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lutayy.campbackend.pojo.Question">
    <selectKey keyProperty="questionId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question (training_id, question_state, type, 
      choice_a, choice_b, choice_c, 
      choice_d, right_choice_one, right_choice_two, 
      right_choice_three, right_choice_four)
    values (#{trainingId,jdbcType=INTEGER}, #{questionState,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, 
      #{choiceA,jdbcType=VARCHAR}, #{choiceB,jdbcType=VARCHAR}, #{choiceC,jdbcType=VARCHAR}, 
      #{choiceD,jdbcType=VARCHAR}, #{rightChoiceOne,jdbcType=TINYINT}, #{rightChoiceTwo,jdbcType=TINYINT}, 
      #{rightChoiceThree,jdbcType=TINYINT}, #{rightChoiceFour,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lutayy.campbackend.pojo.Question">
    <selectKey keyProperty="questionId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="trainingId != null">
        training_id,
      </if>
      <if test="questionState != null">
        question_state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="choiceA != null">
        choice_a,
      </if>
      <if test="choiceB != null">
        choice_b,
      </if>
      <if test="choiceC != null">
        choice_c,
      </if>
      <if test="choiceD != null">
        choice_d,
      </if>
      <if test="rightChoiceOne != null">
        right_choice_one,
      </if>
      <if test="rightChoiceTwo != null">
        right_choice_two,
      </if>
      <if test="rightChoiceThree != null">
        right_choice_three,
      </if>
      <if test="rightChoiceFour != null">
        right_choice_four,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="trainingId != null">
        #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="questionState != null">
        #{questionState,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="choiceA != null">
        #{choiceA,jdbcType=VARCHAR},
      </if>
      <if test="choiceB != null">
        #{choiceB,jdbcType=VARCHAR},
      </if>
      <if test="choiceC != null">
        #{choiceC,jdbcType=VARCHAR},
      </if>
      <if test="choiceD != null">
        #{choiceD,jdbcType=VARCHAR},
      </if>
      <if test="rightChoiceOne != null">
        #{rightChoiceOne,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceTwo != null">
        #{rightChoiceTwo,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceThree != null">
        #{rightChoiceThree,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceFour != null">
        #{rightChoiceFour,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lutayy.campbackend.pojo.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.trainingId != null">
        training_id = #{record.trainingId,jdbcType=INTEGER},
      </if>
      <if test="record.questionState != null">
        question_state = #{record.questionState,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.choiceA != null">
        choice_a = #{record.choiceA,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceB != null">
        choice_b = #{record.choiceB,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceC != null">
        choice_c = #{record.choiceC,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceD != null">
        choice_d = #{record.choiceD,jdbcType=VARCHAR},
      </if>
      <if test="record.rightChoiceOne != null">
        right_choice_one = #{record.rightChoiceOne,jdbcType=TINYINT},
      </if>
      <if test="record.rightChoiceTwo != null">
        right_choice_two = #{record.rightChoiceTwo,jdbcType=TINYINT},
      </if>
      <if test="record.rightChoiceThree != null">
        right_choice_three = #{record.rightChoiceThree,jdbcType=TINYINT},
      </if>
      <if test="record.rightChoiceFour != null">
        right_choice_four = #{record.rightChoiceFour,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      training_id = #{record.trainingId,jdbcType=INTEGER},
      question_state = #{record.questionState,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=BIT},
      choice_a = #{record.choiceA,jdbcType=VARCHAR},
      choice_b = #{record.choiceB,jdbcType=VARCHAR},
      choice_c = #{record.choiceC,jdbcType=VARCHAR},
      choice_d = #{record.choiceD,jdbcType=VARCHAR},
      right_choice_one = #{record.rightChoiceOne,jdbcType=TINYINT},
      right_choice_two = #{record.rightChoiceTwo,jdbcType=TINYINT},
      right_choice_three = #{record.rightChoiceThree,jdbcType=TINYINT},
      right_choice_four = #{record.rightChoiceFour,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lutayy.campbackend.pojo.Question">
    update question
    <set>
      <if test="trainingId != null">
        training_id = #{trainingId,jdbcType=INTEGER},
      </if>
      <if test="questionState != null">
        question_state = #{questionState,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="choiceA != null">
        choice_a = #{choiceA,jdbcType=VARCHAR},
      </if>
      <if test="choiceB != null">
        choice_b = #{choiceB,jdbcType=VARCHAR},
      </if>
      <if test="choiceC != null">
        choice_c = #{choiceC,jdbcType=VARCHAR},
      </if>
      <if test="choiceD != null">
        choice_d = #{choiceD,jdbcType=VARCHAR},
      </if>
      <if test="rightChoiceOne != null">
        right_choice_one = #{rightChoiceOne,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceTwo != null">
        right_choice_two = #{rightChoiceTwo,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceThree != null">
        right_choice_three = #{rightChoiceThree,jdbcType=TINYINT},
      </if>
      <if test="rightChoiceFour != null">
        right_choice_four = #{rightChoiceFour,jdbcType=TINYINT},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lutayy.campbackend.pojo.Question">
    update question
    set training_id = #{trainingId,jdbcType=INTEGER},
      question_state = #{questionState,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      choice_a = #{choiceA,jdbcType=VARCHAR},
      choice_b = #{choiceB,jdbcType=VARCHAR},
      choice_c = #{choiceC,jdbcType=VARCHAR},
      choice_d = #{choiceD,jdbcType=VARCHAR},
      right_choice_one = #{rightChoiceOne,jdbcType=TINYINT},
      right_choice_two = #{rightChoiceTwo,jdbcType=TINYINT},
      right_choice_three = #{rightChoiceThree,jdbcType=TINYINT},
      right_choice_four = #{rightChoiceFour,jdbcType=TINYINT}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
</mapper>